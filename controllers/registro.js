const { addKeyword } = require("@bot-whatsapp/bot");
const flowMenu = require("./menu");

let idCliente;
let nombre;
let apellido;
let correo;
let isNumber;
const flowRegistro = addKeyword(
  [
    "registro",
    "Registro",
    "registrate",
    "Registrate",
    "regist",
    "inicio",
    "Inicio",
    "iniciar",
    "Iniciar",
  ],
  { sensitive: true }
)
  .addAnswer(
    [
      "Favor de ingresar su *N√∫mero de identificador de  cliente*, este n√∫mero consta de 6 d√≠gitos.",
    ],
    { capture: true },
    async (ctx, { fallBack, endFlow }) => {
      idCliente = ctx.body;
      // VALIDAR LONGITUD
      if (idCliente.length < 6 || idCliente.length > 6) return fallBack();
      isNumber = Number(idCliente);
      // VALIDAR TIPO NUMERICO
      if (isNaN(isNumber)) return fallBack();
      // VALIDACI√ìN S√ç EXISTE BD
      if (ctx.body == "112233") {
        return endFlow({
          body: `Estimado participante. üò£
                    \nLe informamos que el n√∫mero de identificador de cliente *${idCliente}*, proporcionado no est√° registrado en nuestra base de datos, por lo que le invitamos a rectificar el n√∫mero correcto y volver a empezar su proceso de registro.
                    \nEn caso de que sea un error, le invitamos a contactar a nuestro equipo de atenci√≥n a clientes enviando un correo electr√≥nico a xxxx@capistrano.com para que su n√∫mero sea dado de alta.
                    \n*S√≠ ingresaste alg√∫n dato incorrecto puedes volver a empezar tu registro escribindo el n√∫mero 1 en cualquier momento.*
                    `,
        });
      }
      // VALIDACI√ìN S√ç ESTATUS BD
      if (ctx.body == "112266") {
        return endFlow({
          body: `Estimado participante. üò£
                    \nLe informamos que seg√∫n nuestra base de datos el registro a este consurso ya fue realizado previamente con la siguente informaci√≥n.
                    \nüìÖ Fecha de registro: *##/##/20##*
                    \nüì± N√∫mero telef√≥nico con terminaci√≥n: *XX XXXX XX07*
                    \nüìß Correo electr√≥nico: *xxxx@gmail.com*
                    \nEn caso de que sea un error, le invitamos a contactar a nuestro equipo de atenci√≥n a clientes enviando un correo electr√≥nico a xxxx@capistrano.com para que su n√∫mero sea dado de alta.
                    \n*S√≠ ingresaste alg√∫n dato incorrecto puedes volver a empezar tu registro escribindo el n√∫mero 1 en cualquier momento.*`,
        });
      }
    }
  )
  .addAnswer(
    "Favor de proporcionar solo su(s) *Nombre(s)*",
    { capture: true },
    (ctx, { fallBack }) => {
      nombre = ctx.body;
      isNumber = Number(nombre);
      // VALIDAR TIPO DE ENTRADA NO NUMERICA
      if (!isNaN(isNumber)) return fallBack();
      // VALIDAR LONGITUD
      if (nombre.length < 3) return fallBack();
    }
  )
  .addAnswer(
    "Favor de proporcionar solo su(s) *Apellido(s)*",
    { capture: true },
    (ctx, { fallBack }) => {
      apellido = ctx.body;
      isNumber = Number(apellido);
      if (!isNaN(isNumber)) return fallBack();
      if (apellido.length < 3) return fallBack();
    }
  )
  .addAnswer(
    "Favor de proporcionar el *Correo electr√≥nico* con el que se desea realizar el registro a este curso",
    { capture: true },
    (ctx, { fallBack }) => {
      correo = ctx.body;
      const regex = /^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/g;
      const validacionCorreo = regex.test(correo);
      console.log("Validando correo", validacionCorreo);
      if (!validacionCorreo) return fallBack();
    }
  )
  .addAnswer(
    "!Te deseamos mucha suerte¬° ü•áüçÄüéÅ",
    null,
    async (ctx, { flowDynamic }) => {
      await flowDynamic(
        `Tu registro a sido completado con √©xito ${nombre} ${apellido} üëè
    \nRecuerda que:
    \n1. Todas tus compras que superen tu objetivo semanal, sumar√°n puntos en tu cuenta de CAPISTRANO. Sabor que premia.
    \n2. Tus puntos los podras cambiar por electrodom√©sticos, equipos electr√≥nicos, equipos para tu negocio, remodelaciones  y m√°s.
    \n3. Para ser uno de los [_n√∫mero de premios_] ganadores [_semanales o mensuales_], deber√°s ser uno de los ganadores con mayor puntaje.
    \n${nombre} ${apellido}, no dejes de participar y prep√°rate para  ganar con CAPISTRANO. Sabor que premia. üéñüí∞
    \n¬øDeseas conocer tu puntaje?
    \n*Escribe el n√∫mero 0 para ingresar a t√∫ men√∫ principal*`
      );
    },
    [flowMenu]
  );

module.exports = flowRegistro;
